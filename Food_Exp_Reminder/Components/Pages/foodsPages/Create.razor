@page "/foods/create"
@using Microsoft.EntityFrameworkCore
@using Food_Exp_Reminder.Model
@inject IDbContextFactory<Food_Exp_Reminder.Data.Food_Exp_ReminderContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>foods</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="foods" OnValidSubmit="Addfoods" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="foods.Name" class="form-control" /> 
                <ValidationMessage For="() => foods.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="expirydate" class="form-label">ExpiryDate:</label> 
                <InputText id="expirydate" @bind-Value="foods.ExpiryDate" class="form-control" /> 
                <ValidationMessage For="() => foods.ExpiryDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="reminderdate" class="form-label">ReminderDate:</label> 
                <InputText id="reminderdate" @bind-Value="foods.ReminderDate" class="form-control" /> 
                <ValidationMessage For="() => foods.ReminderDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="remindermessage" class="form-label">ReminderMessage:</label> 
                <InputText id="remindermessage" @bind-Value="foods.ReminderMessage" class="form-control" /> 
                <ValidationMessage For="() => foods.ReminderMessage" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="foods.Email" class="form-control" /> 
                <ValidationMessage For="() => foods.Email" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/foods">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private foods foods { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task Addfoods()
    {
        using var context = DbFactory.CreateDbContext();
        context.foods.Add(foods);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/foods");
    }
}
